package Reflection_APi;

import java.lang.reflect.Method;

/**
 * Hello world!
 *
 */
public class Teacher 
{
    public static void main( String[] args ) throws ClassNotFoundException
    {
//    	Studentimpl student =new Student_proxy(new Attendence("ramakrishna",true));
//    	student.attendlession();
//    	System.out.println("completed");
    	
    	Class<Student_proxy> object = (Class<Student_proxy>) Class.forName("Reflection_APi.Student_proxy");
    	//this method will give public and private both type methods only from this class...
    	Method[] method = object.getDeclaredMethods();
    	for(Method m: method) {
    		System.out.println(m.getName());
    		
    	}
    	
    	//this method will give only public methods from super class including this class too...
     	Method[] methods = object.getMethods();
    	for(Method m: methods) {
    		System.out.println(m.getName());
    		
    	}
    	Sysoobject.getInterfaces(object.getInterfaces());
    	object.getFields();
    	object.getDeclaredConstructors();
    	object.getConstructors();
    	
    	System.out.println("End of Program");
    	}
}
